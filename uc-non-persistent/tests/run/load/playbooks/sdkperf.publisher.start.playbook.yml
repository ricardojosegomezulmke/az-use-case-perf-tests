# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

---
- name: "SDKPerf Publisher Start"
  hosts: sdkperf_publishers
  gather_facts: no
  pre_tasks:
    - include_vars:
        file: "{{RUN_SPEC_FILE}}"
        name: run_spec
    - include_vars:
        file: "load.vars.yml"
        name: load
  vars:
    broker_uri: "tcp://{{ broker_pubsub.private_ip_address }}"
    broker_smf_port: 55555

  tasks:

    - name: "Set SDKPerf Parameters"
      set_fact:
        sdkperf_exe: "{{sdkperf_root}}/sdkperf/sdkperf_c.sh"
        sdkperf_connection: "{{ broker_uri }}:{{ broker_smf_port }}"
        sdkperf_client_username_prefix: "sdkperf-load@{{ boxname }}"
        sdkperf_user: "{{ broker_pubsub.client_user_name }}@{{ broker_pubsub.vpn_name }}"
        sdkperf_pwd: "{{ broker_pubsub.client_user_name_pwd }}"
        sdkperf_rc: "{{ load.sdkperf.rc }}"
        sdkperf_epl: "{{ load.sdkperf.epl }}"
        sdkperf_cc: "{{ run_spec.load.publishers.client_connection_count }}"
        sdkperf_mn: "{{ load.sdkperf.publishers.total_number_of_messages }}"
        sdkperf_msa: "{{ run_spec.load.publishers.msg_payload_size_bytes }}"
        sdkperf_mr: "{{ run_spec.load.publishers.msg_rate_per_second }}"
        sdkperf_apw: "{{ load.sdkperf.publishers.ack_window_size_bytes }}"

    - name: "Ensure no SDKPerf processes are running"
      become: true
      command: pkill --signal 2 -f sdkperf
      ignore_errors: true

    - pause:
        seconds: 3
        prompt: "Waiting 3 seconds ...."

    - name: "Run 'sdkperf' ..."
      shell: >
        nohup taskset -c {{ group_num }}
        {{ sdkperf_exe }}
        -cip={{ sdkperf_connection }}
        -cn={{ sdkperf_client_username_prefix }}-{{ group.group_id }}-
        -cu={{ sdkperf_user }}
        -cp={{ sdkperf_pwd }}
        -nagle
        -rc={{ sdkperf_rc }}
        -epl={{ sdkperf_epl }}
        -cc={{ sdkperf_cc }}
        -ptl="{{ group.topic_list }}"
        -mn="{{ sdkperf_mn }}"
        -msa="{{ sdkperf_msa }}"
        -mr="{{ sdkperf_mr }}"
        -apw="{{ sdkperf_apw }}"
        -mt=direct
        </dev/null
        > sdkperf_{{ group.group_id }}.out 2>&1
        &
      register: sdkperf_result
      loop: "{{ run_spec.load.publishers.publisher_groups }}"
      loop_control:
        index_var: group_num
        loop_var: group
    # TODO:
    #   to check correct start: download log files and check for ERROR string

###
# The End.
