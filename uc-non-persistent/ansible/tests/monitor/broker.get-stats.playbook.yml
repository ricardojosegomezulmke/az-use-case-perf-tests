
# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

---
- name: "Broker VPN Statistics"
  hosts: broker_pubsub
  gather_facts: no
  vars:
    project_root_dir: "../../"

  pre_tasks:
    - include_vars:
        file: "{{project_root_dir}}/vars/bootstrap.vars.yml"
        name: bootstrap
    - include_vars: "{{project_root_dir}}/vars/sdkperf.vars.yml"
    - include_vars:
        file: "{{ BROKER_NODES_FILE }}"
        name: brokerNodes
    - include_vars:
        file: "{{ SDKPERF_NODES_FILE }}"
        name: sdkPerfNodes
    - include_vars:
        file: "{{project_root_dir}}/vars/monitor.vars.yml"
        name: monitor

  tasks:

    - name: "Read & Check Environment vars"
      set_fact:
        result_dir: "{{ RESULT_DIR }}"
        run_id: "{{ RUN_ID }}"
        run_start_ts_epoch_secs: "{{RUN_START_TS_EPOCH_SECS}}"
        use_case: "{{monitor.general.use_case}}"
        cloud_provider: "{{brokerNodes.broker_nodes[0].cloud_provider}}"

    - name: "Settings"
      set_fact:
        sampling_overhead_secs: 10
        min_collection_period_secs: 15
        sample_run_time_secs: "{{monitor.general.sample_run_time_secs}}"
        vpn_post_process_exe: "./lib/post-process.vpn-stats.sh"
        vpn_post_process_template_file: "./lib/vpn-stats.template.json"
        admin_protocol: "{{ 'https' if sempv2_is_secure_connection else 'http'}}"
        meta_result_file: "{{ result_dir }}/run.meta.json"
        meta_j2_template_file: "./lib/run.meta.j2"
        meta_test_start_ts_str: "{{ now(True) }}"


    - name: "Check Local Files Exist"
      stat:
        path: "{{item}}"
      register: stat_result
      failed_when: not stat_result.stat.exists
      delegate_to: localhost
      with_items:
        - "{{vpn_post_process_exe}}"
        - "{{vpn_post_process_template_file}}"

    - name: "Ensure {{ result_dir }} exists"
      local_action:
        module: file
        path: "{{result_dir}}"
        state: directory

    # # TEST & DEBUG
    # - name: "TEST: Simulate delay in startup"
    #   pause:
    #     seconds: 15

    - name: "Get Client Connections: Start"
      uri:
        # https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/client/getMsgVpnClients
        # GET /msgVpns/{msgVpnName}/clients
        url: "{{admin_protocol}}://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/monitor/msgVpns/{{ bootstrap.broker.pubsub.vpn_name }}/clients?count=100&where=clientUsername=={{bootstrap.broker.pubsub.client_user_name}}&select={{monitor.vpn_stats.select_client_connection_stats|trim|replace(' ','')}}"
        # url: "http://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/monitor/msgVpns/{{ bootstrap.broker.pubsub.vpn_name }}/clients?where=clientUsername=={{bootstrap.broker.pubsub.client_user_name}}"
        method: GET
        user: "{{ sempv2_username }}"
        password: "{{ sempv2_password }}"
        force_basic_auth: yes
        status_code: "200"
        return_content: yes
      register: result

    - set_fact:
        number_connected_clients_start: "{{ result.json.data | length }}"
        connected_client_list_start: "{{ result.json.data }}"

    # # TEST & DEBUG
    # - name: "Number SDKPerf clients connected"
    #   debug:
    #     msg: "Number of Connected SDKPerf Clients={{number_connected_clients_start}}"

    - name: "Clear VPN Stats"
      uri:
        # method: "PUT"
        # uri: "http://51.136.121.254:8080/SEMP/v2/__private_action__/msgVpns/sdkperf/clearStats"
       url: "{{admin_protocol}}://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/__private_action__/msgVpns/{{ bootstrap.broker.pubsub.vpn_name }}/clearStats"
       method: PUT
       user: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       force_basic_auth: yes
       body: "{}"
       body_format: json
       status_code: "200"
       return_content: yes
      register: result

    - name: "Warmup Sample Runs"
      include_tasks: ./tasks/broker.vpn-stats.testrun.yml
      vars:
        warm_up_run: true
      with_sequence: "end=0 start=0"

    - name: "Starting Sample Runs"
      include_tasks: ./tasks/broker.vpn-stats.testrun.yml
      with_sequence: "end={{monitor.general.total_num_samples-1}} start=0"

    - name: "Get Client Connections: End"
      uri:
        # https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/client/getMsgVpnClients
        # GET /msgVpns/{msgVpnName}/clients
        url: "{{admin_protocol}}://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/monitor/msgVpns/{{ bootstrap.broker.pubsub.vpn_name }}/clients?count=100&where=clientUsername=={{bootstrap.broker.pubsub.client_user_name}}&select={{monitor.vpn_stats.select_client_connection_stats|trim|replace(' ','')}}"
        method: GET
        user: "{{ sempv2_username }}"
        password: "{{ sempv2_password }}"
        force_basic_auth: yes
        status_code: "200"
        return_content: yes
      register: result

    - set_fact:
        number_connected_clients_end: "{{ result.json.data | length }}"
        connected_client_list_end: "{{ result.json.data }}"

    - name: "Write Test Meta Data to Results"
      template:
        src: "{{ meta_j2_template_file }}"
        dest: "{{ meta_result_file }}"

###
# The End.
