#!/bin/bash
# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

---
  - name: "Retrieve VPN Stats"
    uri:
      # https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/msgVpn/getMsgVpn
      # GET /SEMP/v2/monitor/msgVpns/{msgVpnName}?select=
     url: "{{admin_protocol}}://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/monitor/msgVpns/{{ bootstrap.broker.pubsub.vpn_name }}?select={{select_vpn_stats|trim|replace(' ','')}}"
     method: GET
     user: "{{ sempv2_username }}"
     password: "{{ sempv2_password }}"
     force_basic_auth: yes
     status_code: "200"
     return_content: yes
    register: result
    when: vpn_stats.ignore_message_loss == True or (vpn_stats.ignore_message_loss == False and is_message_loss == False)

  - name: "Write Stats to local tmp"
    local_action:
      module: copy
      content: "{{ result.json.data | to_nice_json }}"
      dest: "./tmp/vpn-stats/vpn-stats.current.json"
    register: copy_result

  - name: "Post-process vpn-stats file"
    shell: "./lib/post-process.vpn-stats.sh {{copy_result.dest}} './lib/vpn-stats.template.json' '{{now(True)}}'"
    environment:
      RUN_ID: "{{run_id}}"
    delegate_to: localhost
    register: pp_result
    failed_when: pp_result.stderr != '' or pp_result.rc > 0

  # DEBUG
  - name: "Display for faster debugging"
    debug:
      msg:
        - "vpn-stats json file:"
        - "{{pp_result.stdout}}"

  - name: "Copy VPN stats Json to {{ result_dir }}"
    local_action:
      module: copy
      content: "{{pp_result.stdout | from_json | to_nice_json }}"
      dest: "{{ result_dir }}/vpn-stats.{{now(True)}}.json"

  - name: "Check Discarded Received Msgs"
    set_fact:
      is_message_loss: True
      error_msg: "discarded received message count: {{result.json.data.discardedRxMsgCount}}"
    # when: success == True and result.json.data.discardedRxMsgCount > 0
    when: result.json is defined and result.json.data.discardedRxMsgCount > 0

  - name: "Check Discarded Sent Msgs"
    set_fact:
      is_message_loss: True
      error_msg: "discarded sent message count: {{result.json.data.discardedTxMsgCount}}"
    when: result.json is defined and result.json.data.discardedTxMsgCount > 0

  - name: "Check Received Message Loss"
    debug:
      msg:
        - "is_message_loss={{is_message_loss}}"
        - "discarded received message count: {{result.json.data.discardedRxMsgCount}}"
        - "discarded sent message count: {{result.json.data.discardedTxMsgCount}}"
    when: is_message_loss and result.json is defined

  # - name: "Faile when success = False"
  #   fail:
  #     msg:
  #       - "discarded received message count: {{result.json.data.discardedRxMsgCount}}"
  #       - "discarded sent message count: {{result.json.data.discardedTxMsgCount}}"
  #   when: success == False

  - name: "Pause for {{ vpn_stats.pause_between_calls_secs }} seconds..."
    pause:
      seconds: "{{ vpn_stats.pause_between_calls_secs }}"
    when: vpn_stats.ignore_message_loss == True or (vpn_stats.ignore_message_loss == False and is_message_loss == False)


###
# The End.
